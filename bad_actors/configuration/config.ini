[DEFAULT]
logger_name = root
logger_conf_file = configuration/logging.conf
start_date = date('2000-06-07 00:00:00')
end_date = date('2019-06-14 23:59:59')
step_size_in_sec = 691200
#step_size_in_sec = 12960000
#five days in sec = 432000
window_analyze_size_in_sec = 691200
keep_results_for = 2246400
max_concurrent_jobs = 1
domain = Microblog
;domain=Claim
#domain=Blog
#domain=News
#domain=Article
targeted_classes = ['author_type']
#social_network_name = Clickbait_Challenge
#social_network_name = Fake_News
#social_network_name = SBP-BRiMS_2017
social_network_name = Influence_Twitter
#social_network_name = PolitiFact
#social_network_url = "https://Clickbait_Challenge.com/"
#social_network_url = "https://SBP-BRiMS_2017.com/"
#social_network_url = "https://politifact.com/"
social_network_url = "https://twitter.com/"


[Logger]
logger_conf_file = configuration/logging.conf
logger_name = root
file_name = log/bad_actors.log
level = logging.INFO

[OperatingSystem]
linux = False
windows = True

[DB]
DB_path = data/input/
DB_name_prefix = bad_actors_
DB_name_suffix = .db
DB_path_to_extension = lib/extension-functions
dialect_name = sqlalchemy.dialects.sqlite

remove_on_setup = False
remove_on_teardown = False
dropall_on_setup = False
dropall_on_teardown = False
start_date = date('2010-01-01 00:00:00')

######################################################################################################
# Impoteres
######################################################################################################

;[XMLImporter]
;xml_path = data/input/XML/

;[CreateAuthorTables]

;[AppImporter] delete
;data_folder = "data/input/watson/"
;bad_actor_threshold = 2
;optional_classes = ["good_actor", "bad_actor"]

;[JSON_Importer]
;actions =["read_from_files"]
;json_path = "C:/DT_Projects/Dataset_from_Dima/TwitterAPI/TwitterTest/parsed/"
;path_bad_actor_csv = C:/DT_Projects/Dataset_from_Dima/Twitter/only_fake.csv
;author_type = bad_actor

;[CsvImporter]
;data_folder = "data/input/datasets/"
;import_authors = True
;author_csv_path = "data/input/authors_data/authors.csv"

;[FakeNewsSnopesImporter]
;input_csv_file = 'data/input/FakeNewsSnopesImporter/Fake_News_Snopes_for_test.csv'

#[Twitter_Spam_Dataset_Importer]
#original_tsv_location = "data/input/twitter_spam/Manually-Annotated-Tweets.tsv"
#limit_per_crawl = 1000

;[GDLET_News_Importer]
;author_name_as_domain = False
;retrieve_news_by_keywords = False
;num_of_top_terms = 10
;filter_sentences = ["has banned your access based on your browser's signature",
;    "This content, along with any associated source code and files, is licensed under The Code Project Open License (CPOL)"]

# ************** DATASET BUILDER MODULE **********************
[DatasetBuilderConfig]
clean_authors_features_table = False
;
#
;[BadActorsCollector]
;;actions = ['crawl_bad_actors_followers', 'crawl_bad_actors_retweeters','mark_missing_bad_retweeters']
;actions = ['crawl_bad_actors_followers']
;targeted_twitter_author_ids = [25073877, 1339835893, 1330457336]
;targeted_twitter_post_ids = []
;targeted_twitter_author_names = []

;maximal_number_of_retrieved_users = 1000

;[OldTweetsCrawler]
;month_interval = 36
;limit_start_date = False
;limit_end_date = False
;max_num_tweets = 30
;max_num_of_objects_without_saving = 10000
;output_folder_full_path = "data/output/OldTweetsCrawler/"
;#actions = ['get_old_tweets_by_claims_content', 'get_old_tweets_by_claims_keywords']
;actions = ['get_old_tweets_by_claims_keywords']

;[MissingDataComplementor]
;;actions = ['fill_tweet_retweet_connection','fill_data_for_sources','fill_data_for_followers','fill_data_for_friends','fill_authors_time_line'
;;                   ,'assign_manually_labeled_authors','assign_acquired_and_crowdturfer_profiles','delete_acquired_authors','delete_manually_labeled_authors']
;actions = ['fill_author_guid_to_posts', 'fill_data_for_sources']
;max_users_without_saving = 10000
;minimal_num_of_posts = 10000
;limit_friend_follower_number = 5
;#maximal_tweets_count_in_timeline maximal value is 200 according to Twitter API
;maximal_tweets_count_in_timeline = 5
;output_path = "data/output/MissingDataComplementor/"

;[Twitter_Crawler]
;num_of_top_terms = 10
;actions = ['get_most_popular_posts_by_google_trends']
;retrieve_news_by_keywords = []

;[GoogleLinksByKeywords]
;actions = ['import_links_from_keywords']
;submission_limit = 25
;max_results = 10
;# in websites '' means no filters
;;websites = ['']
;websites = ['reddit.com', 'quora.com']
;api_keys = ['AIzaSyBGNn8nww2oQ-UB-vuURfAE7sLpPoF7KKI', 'AIzaSyDNskrmJw7cRsvvgFm-sFWFOTjWPgkACBg', 'AIzaSyCrC-W4PmolFAyAufiZPdh6EK444J74K6w', 'AIzaSyAAmuz5J95WB4HMRy8uuCURAMIqtWQzS9c']

;[InstagramCrawler]
;max_object_without_saving = 1000
;;actions = ['crawl_users_from_usernames_input', 'crawl_hashtags_from_hashtags_input', 'crawl_users_from_db']
;actions = ['crawl_users_from_usernames_input']
;;usernames_input = ['manchesterunited', 'chelseafc', 'mancity', 'arsenal', 'liverpoolfc', 'arsenalwfc', 'westham', 'southamptonfc']
;usernames_input = ['manchesterunited', 'chelseafc']
;;hashtags_input = ['championsleague', 'liverpool', 'chelsea', 'arsenal', 'mancity', 'manchesterunited']
;hashtags_input = ['championsleague']
;max_media_downloads_per_query = 100
;max_entries_without_saving = 10000
;connect_timeout = 90
;max_retries = 5
;retry_delay = 5
;max_retry_delay = 60
;max_media_per_page = 50

;[GDLET_Full_Text_Search_API]
;keywords = ['security', 'google']
;specific_site =
;#specific_site = cnn.com
;specific_language = english
;maximal_returned_records = 100
;
;[Image_Tags_Extractor]
;auth_key = 'dcc38fa5b0d14b169118964ec17fec6f'
;model_id = 'aaa03c23b3724a16a56b629203edc62c'
;dataset_folder = "data/input/Important_datasets/Clickbait_Challenge/sets/training_validation_set2/clickbait17-validation-170630/"
;max_objects_without_saving = 100000
;max_request_to_service = 50
;min_value_proba = 0.85

;[Image_Downloader]
;path_for_downloaded_images = 'data/output/Image_Downloader/'


;[Preprocessor]
;remove_stopwords = True
;apply_stemming = True
;stopwords_file = data/english_stopwords.txt
;stemming_language = en
;is_preprocess_posts = True
;is_preprocess_authors = False
;max_objects_without_saving = 100000

;[TopicDistributionBuilder]

;[LDATopicModel]
;number_of_topics=10
;num_of_terms_in_topic = 12
;stopword_file = lib/eng_stopwords.txt
;stem_language = ENG

;[GensimWordEmbeddingsModelTrainer]
;saved_models_path = "data/output/word_embedding_models/"
;max_vocabulary_size = 10000
;number_of_dimensions_in_hidden_layer = 5
;use_cbow = True
;table_name = "claim_to_posts_table"
;epochs = 4
;window_size = 5
;seed = 100
;selected_optimizer = "None"
;aggregation_functions_names = ['np.mean', 'min', 'max']
;targeted_fields_for_embedding=[{
;					'source': {'table_name': 'claims', 'id': 'claim_id',
;                           "where_clauses": []},
;                'connection': {'table_name': 'claim_tweet_connection',
;                               'source_id': 'claim_id',
;                               'target_id': 'post_id',
;                               "where_clauses": [{"val1": "source.verdict_date",
;                                                  "val2": "dest.date",
;                                                  "op": ">=",
;                                                  }]},
;                'destination': {'table_name': 'posts', 'id': 'post_id',
;                                'target_field': 'content',
;                                "where_clauses": []}
;					}
;				  ]


;[GloveWordEmbeddingModelCreator]
;is_load_wikipedia_300d_glove_model = True
;wikipedia_model_file_path = "data/input/glove/glove.6B.300d.txt"
;;wikipedia_model_file_path = "data/input/glove/glove.twitter.27B.200d.txt"
;;wikipedia_model_file_path = "data/input/glove/wiki-news-300d-1M.vec"
;;wikipedia_model_file_path = "data/input/glove/test_glove.6B.300d_small.txt"
;table_name="glove_wikipedia_model_300d"
;;table_name="glove_twitter_model_200d"
;;table_name="fasttext_model_300d"
;num_of_dimensions = 300
;# for one table use 'source' key only, for two tables and connection table use 'source' 'connection' and 'destination' keys
;targeted_fields_for_embedding=[
;;                                {
;;                              'source': {'table_name': 'claims', 'id': 'claim_id', 'target_field': "description"},
;;                                'connection': {'table_name': 'claim_tweet_connection', 'source_id': 'claim_id', 'target_id': 'post_id'},
;;                              'destination': {'table_name': 'posts', 'id': 'post_id', 'target_field': 'content',"where_clauses": []}
;;                              }
;                              ]
;aggregation_functions_names = ['np.mean', 'min', 'max']


;[OCR_Extractor]
;#images_folder = "data/input/Important_datasets/Clickbait_Challenge/sets/training_validation_set/raw/clickbait17-validation-170616/media/"
;images_folder = "data/input/Important_datasets/Clickbait_Challenge/sets/train_set/clickbait17-train-170331/media/"
;;images_folder = "data/input/Important_datasets/Clickbait_Challenge/sets/unlabeled/raw/clickbait17-unlabeled-170429/media/"
;#images_folder = "data/input/Important_datasets/Clickbait_Challenge/sets/train_set/clickbait17-train-170331/media/"
;#images_folder = "data/input/Important_datasets/Clickbait_Challenge/sets/training_validation_set2/clickbait17-validation-170630/media/"

##################################################################################
###########################Graph Builders##########################################
##################################################################################

;[GraphBuilder_Citation]
;connection_type = citation
;max_objects_without_saving = 100000
;min_number_of_posts_per_author = 1
;num_of_random_authors_for_graph = None

;[GraphBuilder_CoCitation]
;connection_type = cocitation
;max_objects_without_saving = 100000
;min_number_of_cocited_posts = 1
;min_number_of_posts_per_author = 1
;num_of_random_authors_for_graph = None


;[Randomizer]
;min_number_of_posts_per_author = 1
;random_authors_requirements = [{"field_name":"author_type", "value": "good_actor", "num_of_random_authors": 100},
;                               {"field_name":"author_type", "value": "bad_actor", "num_of_random_authors": 100}
;                              ]

;[Topic_Graph_Builder_K_Best]
;connection_type = topic_k_best
;max_objects_without_saving = 500000
;min_number_of_posts_per_author = 1
;k = 5
;# take all. Bring k
;min_distance_threshold = 1
;#Should be deleted
;num_of_random_authors_for_graph = None

;[Topic_Graph_Builder_All_Combinations]
;connection_type = topic_all_combinations
;max_objects_without_saving = 500000
;min_number_of_posts_per_author = 1
;###similarity 0.8 and above
;min_distance_threshold = 0.2
;#Should be deleted
;num_of_random_authors_for_graph = None

;[Topic_Graph_Builder_Random_Combinations]
;connection_type = topic_random_combinations
;max_objects_without_saving = 500000
;min_number_of_posts_per_author = 1
;num_of_random_authors_for_graph = 10000
;###similarity 0.8 and above
;min_distance_threshold = 0.2


;[Bag_Of_Words_Graph_Builder_K_Best]
;connection_type = bag_of_words_k_best
;max_objects_without_saving = 500000
;min_number_of_posts_per_author = 1
;k = 5
;min_distance_threshold = 1
;#Should be deleted
;num_of_random_authors_for_graph = None

;[Bag_Of_Words_Graph_Builder_All_Combinations]
;connection_type = bag_of_words_all_combinations
;max_objects_without_saving = 500000
;min_number_of_posts_per_author = 1
;#Should be deleted
;num_of_random_authors_for_graph = None

;[Bag_Of_Words_Graph_Builder_Random_Combinations]
;connection_type = topic_random_combinations
;max_objects_without_saving = 500000
;min_number_of_posts_per_author = 1
;num_of_random_authors_for_graph = 10000
;###similarity 0.8 and above
;min_distance_threshold = 0.2


;[GraphBuilder_Word_Embedding]
;connection_types =[{"table_name": "posts", "targeted_field_name": "content", "word_embedding_type": "np.mean", "where_clauses": [{"field_name":1, "value": 1}},
;                   {"table_name": "posts", "targeted_field_name": "content", "word_embedding_type": "min", "where_clauses": [{"field_name":1, "value": 1}},
;                   {"table_name": "posts", "targeted_field_name": "content", "word_embedding_type": "max", "where_clauses": [{"field_name":1, "value": 1}}]
;connection_type = word_embeddings
;#similarity_functions = ["cosine_similarity", "manhattan_distance", "minkowski_distance"]
;similarity_functions = ["euclidean_distance", "manhattan_distance", "minkowski_distance", "cosine_similarity", "jaccard_similarity"]
;max_objects_without_saving = 500000
;min_number_of_posts_per_author = 1
;num_of_random_authors_for_graph = None

;[GraphBuilder_Feature_Similarity]
;connection_types = ["behavior_prop", "profile_prop"]
;#connection_types = ["profile_prop"]
;#connection_type below should stay empty
;connection_type =
;min_number_of_posts_per_author = 1
;num_of_random_authors_for_graph = None
;max_objects_without_saving = 100000
;topic_distr_features_min_distance_threshold = 1
;topic_distr_features = ["retweet_count", "average_retweets", "average_hashtags", "average_links", "average_user_mentions",
;            "average_post_lenth", "number_of_crawled_posts"]
;
;profile_prop_features_min_distance_threshold = 1
;profile_prop_features = ["account_age", "number_followers", "number_friends" , "friends_followers_ratio" ,
;            "number_of_posts", "default_profile", "default_profile_image",
;            "listed_count", "verified", "screen_name_length", "average_minutes_between_posts",
;            "average_posts_per_day_active_days", "average_posts_per_day_total", "received_retweets_count"]
;


;
;[GraphBuilder_Common_Posts]
;connection_type = common_posts
;max_objects_without_saving = 100000
;min_number_of_common_posts = 1
;min_number_of_posts_per_author = 1
;num_of_random_authors_for_graph = None


;[GraphBuilder_Followers]
;connection_type = follower
;max_objects_without_saving = 1000000
;min_number_of_posts_per_author = 1
;num_of_random_authors_for_graph = None


;[NetworkGraphAnalyzer]
;actions = ['execute']
;#actions = ['extract_tar_files']
;#actions = ['download_graphs_from_website_single_thread', 'download_graphs_from_website_parallel', 'extract_tar_files_parallel', 'extract_tar_files_single_thread', 'get_nodes_and_edges']
;input_directory_path = "data/input/NetworkGraphAnalyzer/"
;output_directory_path = "data/output/NetworkGraphAnalyzer/"
;tar_files_for_downloading_urls = ['https://dynamics.cs.washington.edu/nobackup/citations/']
;max_num_of_threads = 100

;[WikiTreeAnalyzer]
;#actions = ['calculate_edit_distance_between_user_and_father_and_mother', 'calculate_edit_distance_between_last_name_in_birth_and_current',
;#    'indentify_diff_between_son_and_ancestor_with_single_diff']
;#actions = ['indentify_diff_between_son_and_ancestor_with_single_diff']
;
;# To create First and Last names graph
;#actions = ['create_son_father_mother_file_by_field_name']
;#actions = ['clean_slack_names_and_convert_to_dates_and_countries']
;#actions = ['calculate_measures_for_first_names']
;#actions = ['first_names_edit_distance_1']
;#actions = ['first_names_edit_distance_1']
;#actions = ['group_by_for_son_father_and_son_mother']
;#actions = ['unite_first_name_son_father_and_son_mother_ocuurances']
;#actions = ['export_nodes_file']
;
;
;#actions = ['create_son_father_mother_file_by_field_name']
;#actions = ['clean_slack_names_and_convert_to_dates_and_countries']
;#actions = ['calculate_measures_for_given_names']
;#actions = ['edit_distance_1_and_start_the_same']
;#actions = ['remove_children_with_no_birth_date_and_location']
;#actions = ['group_by_for_son_father_and_son_mother']
;#actions = ['unite_child_father_and_son_mother_ocuurances']
;#actions = ['export_nodes_info_features_file']
;#actions = ['export_nodes_origin_country_and_birth_year_with_no_bing_api']
;#actions = ['evaluate_names_performance_by_name_graph']
;actions = ['evaluate_names_performance_for_all_names']
;
;
;
;input_directory_path = "data/input/WikiTreeAnalyzer/"
;#target_file_name = "dump_people_user_full.csv"
;# First Names
;#target_file_name = "son_father_mother_first_names.csv"
;#target_file_name = "son_father_mother_first_names_dates_and_countries.csv"
;#target_file_name = "son_father_mother_first_names_dates_countries_and_measures.csv"
;#target_file_name = "son_father_mother_file.csv"
;#target_file_name = "son_father_mother_last_name_file.csv"
;#target_file_name = "son_father_mother_file_dates.csv"
;#target_file_name = "son_father_mother_last_name_dates_and_countries.csv"
;#target_file_name = "son_father_mother_last_name_dates_and_countries_with_measures.csv"
;
;
;# Last names
;#target_file_name = "son_father_mother_last_names.csv"
;#target_file_name = "son_father_mother_last_names_dates_and_countries.csv"
;#target_file_name = "son_father_mother_last_names_dates_countries_and_measures.csv"
;
;
;#target_file_name = "last_names_child_ancestor_count_greater_than_1_aggregated.csv"
;#target_file_name = "first_names_child_ancestor_count_greater_than_1_aggregated.csv"
;target_file_name = "son_father_mother_first_names_dates_countries_and_measures.csv"
;
;
;
;output_directory_path = "data/output/WikiTreeAnalyzer/First_Names/"
;#output_directory_path = "data/output/WikiTreeAnalyzer/Last_Names/"
;#target_field_name = "Last Name Current"
;target_field_name = "First Name"
;ancestor_field_name = "Mother Last Name Current"
;#results_file_name = "son_father_mother_file.csv"
;node_features = ['earliest_year', 'earliest_century', 'earliest_decade', 'origin_country']
;# First Name files
;#results_file_name = "son_father_mother_first_names.csv"
;#results_file_name = "son_father_mother_first_names_dates_and_countries.csv"
;#results_file_name = "son_father_mother_first_names_dates_countries_and_measures.csv"
;#results_file_name = "son_father_mother_first_names_dates_countries_and_measures_ED_1_start_the_same.csv"
;#results_file_name = "son_father_mother_last_name_dates_and_countries.csv"
;#results_file_name = "son_father_mother_last_name_dates_and_countries_with_measures.csv"
;#results_file_name = "son_father_mother_last_name_dates_and_countries_with_measures_ED_1_Start_the_same.csv"
;
;# Last Names
;#results_file_name = "son_father_mother_last_names.csv"
;#results_file_name = "son_father_mother_last_names_dates_and_countries.csv"
;#results_file_name = "son_father_mother_last_names_dates_countries_and_measures.csv"
;#results_file_name = "son_father_mother_last_names_dates_countries_and_measures_ED_1_start_the_same.csv"
;
;
;#results_file_name = "sound_performance_on_first_name_graph.csv"
;results_file_name = "sound_performance_on_all_names.csv"
#############################################################################
######################### FEATURE EXTRACTOR MODULES #########################
#############################################################################
;[FeatureExtractor]
;table_name = "author_features"

;[LDATopicFeatureGenerator]
;number_of_topics=10
;num_of_terms_in_topic = 12
;stopword_file = lib/eng_stopwords.txt
;stem_language = ENG
;features_list = [
;                'topic_std_dev',
;                'topic_skewness',
;                'topic_kurtosis'
;                ]
;targeted_fields = [
;;                  {
;;                  'source': {'table_name': 'claims', 'id': 'claim_id', 'target_field': "description"},
;;                  'connection': {'table_name': 'claim_tweet_connection', 'source_id': 'claim_id', 'target_id': 'post_id'},
;;                  'destination': {'table_name': 'posts', 'id': 'post_id', 'target_field': 'content',"where_clauses": []}
;;                  }
;                  ]
;
;

#[OCR_Feature_Generator]
#feature_list = ["is_post_contain_image", "is_image_contain_text"]

;[TopicFeatureGenerator]

;[AggregatedAuthorsPostsFeatureGenerator]
;feature_list = [
;                'posts_date_diff',
;                'authors_age_diff',
;;                'author_screen_name_length',
;                'posts_age',
;                'num_of_retweets',
;                'posts_num_of_favorites',
;                'num_of_followers',
;                'num_of_friends',
;                'num_of_statuses',
;                'num_of_favorites',
;                'num_of_listed_count',
;                'num_of_protected',
;                'num_of_verified',
;                'friends_followers_ratio',
;               ]
;aggregated_functions = [
;                        'sum',
;                       'np.std',
;                       'np.median',
;                       'np.mean',
;                       'max',
;                       'min',
;                       'kurtosis',
;                       'skew']
;division_percents = [0.2, 0.4, 0.6, 0.8, 1]
;;division_percents = [1]
;targeted_fields = [
;                  {
;                  'source': {'table_name': 'claims', 'id': 'claim_id', 'target_field': "description"},
;                  'connection': {'table_name': 'claim_tweet_connection', 'source_id': 'claim_id', 'target_id': 'post_id'},
;                  'destination': {'table_name': 'posts', 'id': 'post_id', 'target_field': 'content',"where_clauses": []}
;                  }
;                  ]

;[CooperationTopicFeatureGenerator]
;aggregated_functions = ['sum', 'np.std','np.median','np.mean','max','min', 'kurtosis', 'skew']
;jaccard_threshs = [0.9]
;stem_language = ENG
;feature_list = [
;                'authors_cooperation'
;                ]
;targeted_fields = [
;                  {
;                  'source': {'table_name': 'claims', 'id': 'claim_id', 'target_field': "description"},
;                  'connection': {'table_name': 'claim_tweet_connection', 'source_id': 'claim_id', 'target_id': 'post_id'},
;                  'destination': {'table_name': 'posts', 'id': 'post_id', 'target_field': 'content',"where_clauses": []}
;                  }
;                  ]



;[BehaviorFeatureGenerator]
;targeted_fields = [
;                  {
;                  'source': {'table_name': 'claims', 'id': 'claim_id', 'target_field': "description"},
;                  'connection': {'table_name': 'claim_tweet_connection', 'source_id': 'claim_id', 'target_id': 'post_id'},
;                  'destination': {'table_name': 'posts', 'id': 'post_id', 'target_field': 'content',"where_clauses": []}
;                  }
;                  ]
;feature_list = ["average_minutes_between_posts", "average_posts_per_day_active_days", "average_posts_per_day_total", "retweet_count", "average_retweets", "received_retweets_count"]
;#feature_list = ["average_minutes_between_posts", "retweet_count", "average_retweets"]

;[BoostScoresFeatureGenerator]
;feature_list = ["boost_score_avg", "boost_score_std_dev", "boost_score_sum", "boosting_timeslots_count",
;              "count_authors_sharing_boosted_posts", "number_pointed_posts", "number_pointers"]

;[KeyAuthorScoreFeatureGenerator]
;feature_list = ["sum_tfidf", "max_tfidf"]

;[SyntaxFeatureGenerator]
;feature_list = ["average_hashtags", "average_links", "average_user_mentions", "average_post_lenth"]
;targeted_fields = [
;                  {
;                  'source': {'table_name': 'claims', 'id': 'claim_id', 'target_field': "description"},
;                  'connection': {'table_name': 'claim_tweet_connection', 'source_id': 'claim_id', 'target_id': 'post_id'},
;                  'destination': {'table_name': 'posts', 'id': 'post_id', 'target_field': 'content',"where_clauses": []}
;					}
;				  ]

#[AccountPropertiesFeatureGenerator]
##feature_list = ["account_age", "number_followers", "number_friends" , "friends_followers_ratio" , "number_of_crawled_posts", "number_of_posts","default_profile",
##				"default_profile_image", "listed_count","verified", "screen_name_length", "author_guid", "author_screen_name", "author_type", "author_sub_type"]
##targeted_fields = [{'source': {'table_name': 'posts', 'id': 'author_guid', 'target_field': 'content',
##                          "where_clauses": [{"field_name": "domain", "value": "Mx1icroblog"}]},
##                   #'connection': {},
##                   #'destination': {}
##				   }]
#
#feature_list = ["author_type"]
#targeted_fields = [{'source': {'table_name': 'posts', 'id': 'author_guid', 'target_field': 'content',
#                          "where_clauses": [{"field_name": "domain", "value": "Microblog"}]},
#                   #'connection': {},
#                   #'destination': {}
#				   }]

;[GloveWordEmbeddingsFeatureGenerator]
;# to use gensim word embedding you need to specify "gensim_word_embedding_data.csv" and set load_from_csv to True
;load_from_csv = False
;author_word_embedding_csv_path = "data/output/word_embedding_models/gensim_word_embedding_data.csv"
;targeted_author_word_embeddings =[{"table_name": "claims", "targeted_field_name": "content", "word_embedding_type": "np.mean"},
;                                    {"table_name": "claims",  "targeted_field_name": "content", "word_embedding_type": "max"},
;                                 {"table_name": "claims", "targeted_field_name": "content", "word_embedding_type": "min"}]
;word_embedding_table_name = "author_word_embeddings_glove_wikipedia_model_300d_300_dim"
;;word_embedding_table_name = "author_word_embeddings_glove_twitter_model_200d_200_dim"
;;word_embedding_table_name = "author_word_embeddings_glove_twitter_200d_200_dim"
;max_objects_without_saving = 100

;[GensimWordEmbeddingsFeatureGenerator]
;author_word_embedding_csv_path = "data/output/word_embedding_models/gensim_word_embedding_data.csv"
;targeted_author_word_embeddings=[{"table_name": "posts", "targeted_field_name": "content", "word_embedding_type": "np.mean", "where_clauses": [{"field_name":1, "value": 1}] },
;                                {"table_name": "posts",  "targeted_field_name": "content", "word_embedding_type": "max", "where_clauses": [{"field_name":1, "value": 1}] },
;                                 {"table_name": "posts", "targeted_field_name": "content", "word_embedding_type": "min", "where_clauses": [{"field_name":1, "value": 1}] }]
;word_embedding_table_name = "author_word_embedding_model_300d_300_dim"
;max_objects_without_saving = 100


;[Word_Embedding_Differential_Feature_Generator]
;table_name = "author_word_embeddings_glove_wikipedia_model_300d_300_dim"
;pairs_targets=[ (  {"table_name": "target_articles", "id_field": "author_guid", "targeted_field_name": "title",
;                                "where_clauses": [{"field_name":1, "value": 1}]},
;                   {"table_name": "posts", "id_field": "author_guid", "targeted_field_name": "content",
;                                "where_clauses": [{"field_name":1, "value": 1}]})   ]
;aggregation_functions = ['min', 'sum', 'max', 'np.mean']
;distance_functions = ["euclidnean_distance", "cosine_similarity", "minkowski_distance", "manhattan_distance", "jaccard_idex"]


;[GensimDoc2VecFeatureGenerator]
;saved_models_path = "data/output/word_embedding_models/"
;max_vocabulary_size = 10000
;num_of_dimensions = 100
;window_size = 5
;table_name = "claims"
;aggregation_functions_names = []
;targeted_fields_for_embedding=[
;                    {
;                  'source': {'table_name': 'claims', 'id': 'claim_id', 'target_field': "description"},
;                  'connection': {'table_name': 'claim_tweet_connection', 'source_id': 'claim_id', 'target_id': 'post_id'},
;                  'destination': {'table_name': 'posts', 'id': 'post_id', 'target_field': 'content',"where_clauses": []}
;					}
;				  ]
;max_objects_without_saving = 100000
;
;
;[Sentiment_Feature_Generator]
;targeted_fields = [
;                  {
;                  'source': {'table_name': 'claims', 'id': 'claim_id', 'target_field': "description"},
;                  'connection': {'table_name': 'claim_tweet_connection', 'source_id': 'claim_id', 'target_id': 'post_id'},
;                  'destination': {'table_name': 'posts', 'id': 'post_id', 'target_field': 'content',"where_clauses": []}
;					}
;				  ]
;aggregated_functions = [
;                       'sum',
;                       'np.std',
;                       'np.median',
;                       'np.mean',
;                       'max',
;                       'min',
;                       'kurtosis',
;                       'skew']
;feature_list = [
;               "authors_posts_semantic_compound",
;               "authors_posts_semantic_positive",
;               "authors_posts_semantic_negative",
;               "authors_posts_semantic_neutral",
;               ]


;[Text_Anlalyser_Feature_Generator]
;targeted_fields = [
;                  {
;                  'source': {'table_name': 'claims', 'id': 'claim_id', 'target_field': "description"},
;                  'connection': {'table_name': 'claim_tweet_connection', 'source_id': 'claim_id', 'target_id': 'post_id'},
;                  'destination': {'table_name': 'posts', 'id': 'post_id', 'target_field': 'content', "where_clauses": []}
;                  }
;                  ]
;feature_list = [
;               "num_of_chars_on_avg",
;               "num_of_verbse_on_avarage",
;               "num_of_adjectives_on_avg",
;               "num_of_nouns_on_avg",
;               "num_of_quotations_on_avg",
;               "num_of_uppercase_words_in_post_on_avg",
;               "number_of_precent_of_uppercased_posts",
;;               "num_of_formal_words_on_avg",
;;               "num_of_informal_words_on_avg",
;;               "precent_of_formal_words_on_avg",
;               "num_of_question_marks_on_avg",
;               "num_of_colons_on_avg",
;               "num_of_comas_on_avg",
;               "num_of_retweets_on_avg",
;               "num_of_ellipsis_on_avg",
;               "num_of_stop_words_on_avg",
;               "precent_of_stop_words_on_avg"
;               ]
;;;bellow - will run function on features from feature-list gotten by targeted fields
;;multi_feature_target_fields = [({"table_name": "posts", "id_field": "author_guid", "targeted_field_name": "content", "where_clauses": [{"field_name":1, "value": 1}]}, {"table_name": "posts", "id_field": "author_guid", "targeted_field_name": "title", "where_clauses": [{"field_name":1, "value": 1}]})]
;;multi_feature_feature_list = ["num_of_characters",
;;                             "num_of_verbse",
;;                             "num_of_nouns",
;;                             "num_of_adj",
;;                             "num_of_quotations",
;;                             "num_of_uppercase_words",
;;                             "num_of_foraml_words",
;;                             "num_of_informal_words",
;;                             "num_of_stopwords"]
;;multi_feature_function_names = ["diffarence", "ratio"]
;
;[TemporalFeatureGenerator]
;aggregated_functions = [
;                       'sum',
;                       'np.std',
;                       'np.median',
;                       'np.mean',
;                       'max',
;                       'min',
;                       'kurtosis',
;                       'skew']
;delta_time = [1, 30, 365]
;feature_list = [
;               'posts_temporal',
;               'authors_temporal',
;               ]
;targeted_fields = [
;                  {
;                  'source': {'table_name': 'claims', 'id': 'claim_id', 'target_field': "description"},
;                  'connection': {'table_name': 'claim_tweet_connection', 'source_id': 'claim_id', 'target_id': 'post_id'},
;                  'destination': {'table_name': 'posts', 'id': 'post_id', 'target_field': 'content',"where_clauses": []}
;                  }
;                  ]

;[RedditPostByClaimFeatureGenerator]
;measure_names = ['karma_by_submission_and_comment', 'karma_by_submission', 'upvotes_by_submission', 'downvotes_by_submission']
;aggregation_functions = ['min', 'max', 'mean', 'median', 'skew', 'kurtosis']
;
;[RedditAuthorByClaimFeatureGenerator]
;measure_names = ['comment_karma', 'link_karma', 'total_karma', 'count_is_gold', 'count_is_moderator', 'count_is_employee',
;                'ratio_is_gold', 'ratio_is_moderator', 'ratio_is_employee']
;aggregation_functions = ['min', 'max', 'mean', 'median', 'skew', 'kurtosis']

;[Clickbait_Feature_Generator]
;feature_list = [
;				 "num_of_characters_in_post_title",
;                "num_of_characters_in_article_title",
;                "num_of_characters_in_article_description",
;                "average_num_of_characters_in_article_keywords",
;                "average_num_of_characters_in_article_captions",
;                "average_num_of_characters_in_article_paragraphs",
;                "num_of_characters_in_post_image_text",
;                "diff_num_of_characters_post_title_and_article_title",
;                "diff_num_of_characters_post_title_and_article_description",
;                "diff_num_of_characters_post_title_and_article_keywords",
;                "diff_num_of_characters_post_title_and_article_captions",
;                "diff_num_of_characters_post_title_and_article_paragraphs",
;                "diff_num_of_characters_post_title_and_post_image_text",
;                "diff_num_of_characters_article_title_and_article_description",
;                "diff_num_of_characters_article_title_and_article_keywords",
;                "diff_num_of_characters_article_title_and_article_captions",
;                "diff_num_of_characters_article_title_and_article_paragraphs",
;                "diff_num_of_characters_article_title_and_post_image_text",
;                "diff_num_of_characters_article_description_and_article_keywords",
;                "diff_num_of_characters_article_description_and_article_captions",
;                "diff_num_of_characters_article_description_and_article_paragraphs",
;                "diff_num_of_characters_article_description_and_post_image_text",
;                "diff_num_of_characters_article_keywords_and_article_captions",
;                "diff_num_of_characters_article_keywords_and_article_paragraphs",
;                "diff_num_of_characters_article_keywords_and_post_image_text",
;                "diff_num_of_characters_article_captions_and_article_paragraphs",
;                "diff_num_of_characters_article_captions_and_post_image_text",
;                "diff_num_of_characters_article_paragraphs_and_post_image_text",
;                "num_of_characters_ratio_article_title_and_post_title",
;                "num_of_characters_ratio_article_description_and_post_title",
;                "num_of_characters_ratio_article_keywords_and_post_title",
;                "num_of_characters_ratio_article_captions_and_post_title",
;                "num_of_characters_ratio_article_paragraphs_post_title",
;                "num_of_characters_ratio_post_image_text_and_post_title",
;                "num_of_characters_ratio_article_description_and_article_title",
;                "num_of_characters_ratio_article_keywords_and_article_title",
;                "num_of_characters_ratio_article_captions_and_article_title",
;                "num_of_characters_ratio_article_paragraphs_and_article_title",
;                "num_of_characters_ratio_post_image_text_and_article_title",
;                "num_of_characters_ratio_article_keywords_and_article_description",
;                "num_of_characters_ratio_article_captions_and_article_description",
;                "num_of_characters_ratio_article_paragraphs_and_article_description",
;                "num_of_characters_ratio_post_image_text_and_article_description",
;                "num_of_characters_ratio_article_captions_and_article_keywords",
;                "num_of_characters_ratio_article_paragraphs_and_article_keywords",
;                "num_of_characters_ratio_post_image_text_and_article_keywords",
;                "num_of_characters_ratio_article_paragraphs_and_article_captions",
;                "num_of_characters_ratio_post_image_text_and_article_captions",
;                "num_of_characters_ratio_post_image_text_and_article_paragraphs",
;                "num_of_words_in_post_title",
;                "num_of_words_in_article_title",
;                "num_of_words_in_article_description",
;                "average_num_of_words_in_article_keywords",
;                "average_num_of_words_in_article_captions",
;                "average_num_of_words_in_article_paragraphs","num_of_words_in_post_image_text",
;                "diff_num_of_words_post_title_and_article_title",
;                "diff_num_of_words_post_title_and_article_description",
;                "diff_num_of_words_post_title_and_article_keywords",
;                "diff_num_of_words_post_title_and_article_captions",
;                "diff_num_of_words_post_title_and_article_paragraphs",
;                "diff_num_of_words_post_title_and_post_image_text",
;                "diff_num_of_words_article_title_and_article_description",
;                "diff_num_of_words_article_title_and_article_keywords",
;                "diff_num_of_words_article_title_and_article_captions",
;                "diff_num_of_words_article_title_and_article_paragraphs",
;                "diff_num_of_words_article_title_and_post_image_text",
;                "diff_num_of_words_article_description_and_article_keywords",
;                "diff_num_of_words_article_description_and_article_captions",
;                "diff_num_of_words_article_description_and_article_paragraphs",
;                "diff_num_of_words_article_description_and_post_image_text",
;                "diff_num_of_words_article_keywords_and_article_captions",
;                "diff_num_of_words_article_keywords_and_article_paragraphs",
;                "diff_num_of_words_article_keywords_and_post_image_text",
;                "diff_num_of_words_article_captions_and_article_paragraphs",
;                "diff_num_of_words_article_captions_and_post_image_text",
;                "diff_num_of_words_article_paragraphs_and_post_image_text",
;                "num_of_words_ratio_article_title_and_post_title",
;                "num_of_words_ratio_article_description_and_post_title",
;                "num_of_words_ratio_article_keywords_and_post_title",
;                "num_of_words_ratio_article_captions_and_post_title",
;                "num_of_words_ratio_article_paragraphs_post_title",
;                "num_of_words_ratio_post_image_text_and_post_title",
;                "num_of_words_ratio_article_description_and_article_title",
;                "num_of_words_ratio_article_keywords_and_article_title",
;                "num_of_words_ratio_article_captions_and_article_title",
;                "num_of_words_ratio_article_paragraphs_and_article_title",
;                "num_of_words_ratio_post_image_text_and_article_title",
;                "num_of_words_ratio_article_keywords_and_article_description",
;                "num_of_words_ratio_article_captions_and_article_description",
;                "num_of_words_ratio_article_paragraphs_and_article_description",
;                "num_of_words_ratio_post_image_text_and_article_description",
;                "num_of_words_ratio_article_captions_and_article_keywords",
;                "num_of_words_ratio_article_paragraphs_and_article_keywords",
;                "num_of_words_ratio_post_image_text_and_article_keywords",
;                "num_of_words_ratio_article_paragraphs_and_article_captions",
;                "num_of_words_ratio_post_image_text_and_article_captions",
;                "num_of_words_ratio_post_image_text_and_article_paragraphs",
;                "num_of_article_keywords_exist_in_post_title",
;                "num_of_article_keywords_exist_in_article_title",
;                "num_of_article_keywords_exist_in_article_description",
;                "num_of_article_keywords_exist_in_article_captions",
;                "num_of_article_keywords_exist_in_article_paragraphs",
;                "post_creation_hour",
;                "num_of_article_paragraphs",
;                "num_of_article_captions",
;                "num_of_article_keywords",
;                "num_of_at_signs_in_post_title",
;                "num_of_at_signs_in_article_title",
;                "num_of_at_signs_in_article_captions",
;                "num_of_at_signs_in_article_paragraphs",
;                "num_of_number_signs_in_post_title",
;                "num_of_number_signs_in_article_title",
;                "num_of_number_signs_in_article_description",
;                "num_of_number_signs_in_article_captions",
;                "num_of_number_signs_in_article_paragraphs",
;                "num_of_question_marks_in_post_title",
;                "num_of_question_marks_in_article_title",
;                "num_of_question_marks_in_article_description",
;                "num_of_question_marks_in_article_captions",
;                "num_of_question_marks_in_article_paragraphs",
;                "num_of_colon_signs_in_post_title",
;                "num_of_colon_signs_in_article_title",
;                "num_of_colon_signs_in_article_description",
;                "num_of_colon_signs_in_article_captions",
;                "num_of_colon_signs_in_article_paragraphs",
;                "num_of_retweet_signs_in_post_title",
;                "num_of_retweet_signs_in_article_title",
;                "num_of_retweet_signs_in_article_description",
;                "num_of_retweet_signs_in_article_captions",
;                "num_of_retweet_signs_in_article_paragraphs",
;                "num_of_commas_in_post_title",
;                "num_of_commas_in_article_title",
;                "num_of_commas_in_article_description",
;                "num_of_commas_in_article_captions",
;                "num_of_commas_in_article_pargaraphs",
;               "num_of_ellipsis_in_post_title",
;               "num_of_ellipsis_in_article_title",
;               "num_of_ellipsis_in_article_description",
;               "num_of_ellipsis_in_article_captions",
;               "num_of_ellipsis_in_article_pargaraphs",
;               "num_of_formal_words_in_post_title",
;               "num_of_formal_words_in_article_title",
;               "num_of_formal_words_in_article_description",
;               "num_of_formal_words_in_article_keywords",
;               "num_of_formal_words_in_article_captions",
;               "num_of_formal_words_in_article_paragraphs",
;               "num_of_formal_words_in_post_image_text",
;               "num_of_informal_words_in_post_title",
;               "num_of_informal_words_in_article_title",
;               "num_of_informal_words_in_article_description",
;               "num_of_informal_words_in_article_keywords",
;               "num_of_informal_words_in_article_captions",
;               "num_of_informal_words_in_article_paragraphs",
;               "num_of_informal_words_in_post_image_text",
;               "percent_of_formal_words_in_post_title",
;               "percent_of_formal_words_in_article_title",
;               "percent_of_formal_words_in_article_description",
;               "percent_of_formal_words_in_article_keywords",
;               "percent_of_formal_words_in_post_image_text",
;               "percent_of_informal_words_in_post_title",
;               "percent_of_informal_words_in_article_title",
;               "percent_of_informal_words_in_article_description",
;               "percent_of_informal_words_in_article_keywords",
;               "percent_of_informal_words_in_post_image_text",
;               "number_of_uppercase_words_in_post_title",
;               "number_of_uppercase_words_in_article_title",
;               "number_of_uppercase_words_in_article_description",
;               "number_of_uppercase_words_in_article_captions",
;               "number_of_uppercase_words_in_article_paragraphs",
;               "number_of_uppercase_words_in_article_keywords",
;               "number_of_uppercase_image_words",
;               "are_all_post_title_words_uppercase",
;               "are_all_article_title_words_uppercase",
;               "are_all_article_keywords_uppercase",
;               "are_all_article_captions_uppercase",
;               "are_all_article_paragraph_uppercase",
;               "are_all_article_image_text_uppercase",
;               "num_of_nouns_in_post_title",
;               "num_of_nouns_in_article_title",
;               "num_of_nouns_in_article_description",
;               "num_of_nouns_in_article_description",
;               "num_of_nouns_in_article_captions",
;               "num_of_nouns_in_article_paragraphs",
;               "num_of_nouns_in_article_keywords",
;               "num_of_nouns_in_article_image",
;               "num_of_verbs_in_post_title",
;               "num_of_verbs_in_article_title",
;               "num_of_verbs_in_article_description",
;               "num_of_verbs_in_article_description",
;               "num_of_verbs_in_article_captions",
;               "num_of_verbs_in_article_paragraphs",
;               "num_of_verbs_in_article_keywords",
;               "num_of_verbs_in_article_image",
;               "num_of_adjs_in_post_title",
;               "num_of_adjs_in_article_title",
;               "num_of_adjs_in_article_description",
;               "num_of_adjs_in_article_description",
;               "num_of_adjs_in_article_captions",
;               "num_of_adjs_in_article_paragraphs",
;               "num_of_adjs_in_article_keywords",
;               "num_of_adjs_in_article_image",
;               "num_of_stopwords_in_post_title",
;               "num_of_stopwords_in_article_title",
;               "num_of_stopwords_in_article_description",
;               "num_of_stopwords_in_article_captions",
;               "num_of_stopwords_in_article_keywords",
;               "num_of_stopwords_in_article_paragraphs",
;               "num_of_stopwords_in_image_text",
;               "num_of_stopwords_in_post_title",
;               "num_of_stopwords_in_article_title",
;               "num_of_stopwords_in_article_description",
;               "num_of_stopwords_in_article_captions",
;               "num_of_stopwords_in_article_keywords",
;               "num_of_stopwords_in_article_paragraphs",
;               "num_of_stopwords_in_image_text",
;               "contains_quotation_post_title",
;               "contains_quotation_article_title",
;               "contains_quotation_article_description",
;               "contains_quotation_article_captions",
;               "contains_quotation_article_keywords",
;               "contains_quotation_article_paragraph",
;               "contains_quotation_post_image"
;   ]

;[Image_Tags_Feature_Generator]
;actions = ['ordinal']
#representation_method = 'hashing'
#representation_method = 'ordinal'
#representation_method = 'dummy'
#feature_hasher_dimensions = 400

;[Liar_Dataset_Feature_Generator]
;feature_list=[]


;[GraphFeatureGenerator_1]
;graph_directed = False
;graph_weights = True
;graph_types = ["citation", "cocitation", "common_posts", "topic", "bag_of_words"]
;#graph_types = ["common_posts"]
;algorithms = ["closeness_centrality", "clustering", "degree_centrality"]
;#algorithms = ["betweenness_centrality", "closeness_centrality", "clustering", "degree_centrality"]
;aggregation_functions = ["mean", "std" ,"kurt", "skew"]
;neighborhood_sizes = [1]
;distances_from_labeled_authors = ["average_distances", "min_distances"]

#[Word_Embeddings_Comparison_Feature_Generator]
#connection_types =[({"table_name": "posts", "targeted_field_name": "content",
#                  "word_embedding_type": "max"},{"table_name": "posts", "targeted_field_name": "content", "word_embedding_type": "np.mean"}),
#                  ({"table_name": "posts", "targeted_field_name": "content",
#                  "word_embedding_type": "min"},{"table_name": "posts", "targeted_field_name": "content", "word_embedding_type": "max"})]
#connection_type = word_embedding
##similarity_functions = ["subtruct_and_split"] will subtruct the two fields and than split each dimension to a feature
#similarity_functions = ["euclidean_distance", "cosine_similarity", "minkowski_distance", "manhattan_distance", "jaccard_index", "subtruct_and_split"]
;word_embedding_table_name = "author_word_embeddings_wikipedia_model_300d_300_dim"

;[N_Grams_Feature_Generator]
;;n = [1, 2, 3, 4]
;n = [3]
;maximal_records_without_saving = 1000000
;output_path = "data/output/n_gram/"
;remove_stopwords = True
;stemming = True
;targeted_fields = [
;                  {
;                  'source': {'table_name': 'claims', 'id': 'claim_id', 'target_field': "description"},
;                  'connection': {'table_name': 'claim_tweet_connection', 'source_id': 'claim_id', 'target_id': 'post_id'},
;                  'destination': {'table_name': 'posts', 'id': 'post_id', 'target_field': 'content',
;                  "where_clauses": []}
;                  }
;                  ]
;threshold = 2
;create_features = True

;[TF_IDF_Feature_Generator]
;aggregation_functions_names = ['min', 'max', 'mean', 'median', 'skew', 'kurtosis']
;remove_zeros = False
;targeted_fields = [
;                  {
;                  'source': {'table_name': 'claims', 'id': 'claim_id', 'target_field': "description"},
;                  'connection': {'table_name': 'claim_tweet_connection', 'source_id': 'claim_id', 'target_id': 'post_id'},
;                  'destination': {'table_name': 'posts', 'id': 'post_id', 'target_field': 'content',"where_clauses": []}
;					}
;				  ]

;[Known_Words_Number_Feature_generator]
;feature_list = ["calc_avg_known_words"]
;word_lists_path = "data\input\known_words"
;word_lists_names = ["subjects", "contractions"]
;#word_lists_names = ["subjects", "hyperbolic", "contractions", "common"]
;# to calc author features from source connection and destiantion tables or use source only (in that case should contain 'target_field' key)
;targeted_fields = [
;                  {
;                  'source': {'table_name': 'claims', 'id': 'claim_id', 'target_field': "description"},
;                  'connection': {'table_name': 'claim_tweet_connection', 'source_id': 'claim_id', 'target_id': 'post_id'},
;                  'destination': {'table_name': 'posts', 'id': 'post_id', 'target_field': 'content',"where_clauses": []}
;					}
;				  ]


;[GloVe_Post_Article_Comparison_Feature_Generator]
;post_descriptors = [{"table_name": "posts", "id_field": "author_guid", "targeted_field_name": "content",
;                     "where_clauses": [{"field_name":1, "value": 1}]}]
;article_descriptors = [{"table_name": "target_articles", "id_field": "author_guid", "targeted_field_name": "title",
;                       "where_clauses": [{"field_name":1, "value": 1}]},
;                       {"table_name": "target_articles", "id_field": "author_guid", "targeted_field_name": "description",
;                        "where_clauses": [{"field_name":1, "value": 1}]},
;                        {"table_name": "target_articles", "id_field": "author_guid", "targeted_field_name": "keywords",
;                        "where_clauses": [{"field_name":1, "value": 1}]},
;                        {"table_name": "target_articles", "id_field": "author_guid", "targeted_field_name": "keywords",
;                        "where_clauses": [{"field_name":1, "value": 1}]},



;[NodeLabeling]
;is_calculation_for_only_unlabeled_authors = False
;is_k_fold_cross_validation_for_manually_labeled_authors = False
;#if k-fold is true~
;k_fold_size_on_manually_labelled_authors = 10
;# if k-fold is false then split into train - test
;split_to_train_and_test = False
;train_test_split_on_manually_labeled_authors = 0.8


;[GraphFeatureGenerator_2]
;graph_directed = True
;graph_weights = True
;graph_types = ["citation"]
;algorithms = ["closeness_centrality", "clustering", "in_degree_centrality", "out_degree_centrality"]
;#algorithms = ["betweenness_centrality", "closeness_centrality", "clustering", "in_degree_centrality", "out_degree_centrality"]
;aggregation_functions = ["mean", "std" ,"kurt", "skew"]
;neighborhood_sizes = [1]
;distances_from_labeled_authors = ["average_distances", "min_distances"]

;
;[AnchorAuthorsCreator]
;#targeted_class_num_of_authors_dict = {"good_actor": 100, "bad_actor": 100}
;targeted_class_num_of_authors_dict = {"good_actor": 5, "bad_actor": 11}
;targeted_class_field_name = 'author_type'

;[KNNWithLinkPrediction_Refactored]
;connection_type = cocitation
;index_field_for_predictions = 'author_guid'
;targeted_class = 'author_type'
;similarity_function = 'cocitation'
;decision_models = ['majority_voting', 'weighted_majority_voting']
;k = [1,3]
;num_of_iterations = 2
;result_author_file_name = data/output/KNNWithLinkPrediction/predictions_refactored.csv
;result_classifier_file_name = data/output/KNNWithLinkPrediction/classifiers_results_refactored.csv
;train_percent = 40
;randomly_clasify_unlabled = True
;clasification_options = {"bad_actor": 1, "good_actor": 0}
;
;update_targeted_class_in_db = False
;random_seed = 1

;[KNNWithLinkPrediction]
;results_path = data/output/KNNWithLinkPrediction/SNAM_ISIS_Propaganda_Twitter_results_KNN_on_sim_functions.csv
;predictions_per_iteration_path = data/output/KNNWithLinkPrediction/SNAM_ISIS_Propaganda_Twitter_predictions_per_iteration.csv
;k = [1, 2, 3, 4, 5]
;targeted_class_anchors_percent_size= [0.01, 0.02, 0.05, 0.1, 0.2, 0.4]
;similarity_functions = ["bag_of_words", "profile_prop", "topic_distr", "cocitation", "common_posts",
;                        #"topic", "bag", "text_similarity", "profile_similarity",
;                        #"posts_content_max_cosine_similarity", "posts_content_max_euclidean_distance",
;                        #"posts_content_max_jaccard_similarity", "posts_content_max_manhattan_distance",
;                        #"posts_content_max_minkowski_distance", "posts_content_min_cosine_similarity",
;                        #"posts_content_min_euclidean_distance", "posts_content_min_jaccard_similarity",
;                        #"posts_content_min_manhattan_distance", "posts_content_min_minkowski_distance",
;                        #"posts_content_np.mean_cosine_similarity", "posts_content_np.mean_euclidean_distance",
;                        #"posts_content_np.mean_jaccard_similarity", "posts_content_np.mean_manhattan_distance",
;                        #"posts_content_np.mean_minkowski_distance"
;                        ]
;link_prediction_models = ['jaccard_coefficient']
;order_of_results_dictionary = ['targeted_class_field_name', 'similarity_functions', 'k', 'decision_models','targeted_class_anchors_percent_size']
;#order_of_results_dictionary = ['targeted_class_field_name', 'similarity_functions', 'k', 'decision_models', 'link_prediction_models', 'targeted_class_anchors_percent_size']
;compute_knn_based_on_lp = False
;results_averaged_on_report = True
;generate_anchors = True
;num_iterations = 5
;targeted_class_dict = {"good_actor" : 0, "bad_actor": 1}
;targeted_class_field_name = ['author_type']
;decision_models = ['majority_voting']
;#decision_models = ['majority_voting', 'weighted_majority_voting']
;column_names_for_results_table = ["Targeted_class", "Similarity_function", "K", "Decision_model", "Anchors Percent Size", "Correctly_classified",
;                                    "Incorrectly_classified", "Total", "AUC", "Accuracy", "Precision", "Recall"
;                                 ]
;results_file_name = SNAM_ISIS_Propaganda_Twitter_knn_results.txt
;results_table_file_name = SNAM_ISIS_Propaganda_Twitter_knn_results_table.csv
;path = data/output/KNNWithLinkPrediction/
;index_field_for_predictions = author_screen_name

;[KNN_Classifier]
;targeted_class_num_of_authors_dict = {"good_actor": 5, "bad_actor": 11}
;targeted_class_field_name = 'author_type'
;results_path = data/output/KNNWithLinkPrediction/SNAM_ISIS_Propaganda_Twitter_results_KNN_on_sim_functions.csv
;predictions_per_iteration_path = data/output/KNNWithLinkPrediction/SNAM_ISIS_Propaganda_Twitter_predictions_per_iteration.csv
;k = [1, 2, 3, 4, 5]
;targeted_class_anchors_percent_size= [0.01, 0.02, 0.05, 0.1, 0.2, 0.4]
;similarity_functions = ["bag_of_words", "profile_prop", "topic_distr", "cocitation", "common_posts",
;                        #"topic", "bag", "text_similarity", "profile_similarity",
;                        #"posts_content_max_cosine_similarity", "posts_content_max_euclidean_distance",
;                        #"posts_content_max_jaccard_similarity", "posts_content_max_manhattan_distance",
;                        #"posts_content_max_minkowski_distance", "posts_content_min_cosine_similarity",
;                        #"posts_content_min_euclidean_distance", "posts_content_min_jaccard_similarity",
;                        #"posts_content_min_manhattan_distance", "posts_content_min_minkowski_distance",
;                        #"posts_content_np.mean_cosine_similarity", "posts_content_np.mean_euclidean_distance",
;                        #"posts_content_np.mean_jaccard_similarity", "posts_content_np.mean_manhattan_distance",
;                        #"posts_content_np.mean_minkowski_distance"
;                        ]
;link_prediction_models = ['jaccard_coefficient']
;order_of_results_dictionary = ['targeted_class_field_name', 'similarity_functions', 'k', 'decision_models','targeted_class_anchors_percent_size']
;#order_of_results_dictionary = ['targeted_class_field_name', 'similarity_functions', 'k', 'decision_models', 'link_prediction_models', 'targeted_class_anchors_percent_size']
;compute_knn_based_on_lp = False
;results_averaged_on_report = True
;generate_anchors = True
;num_iterations = 5
;targeted_class_dict = {"good_actor" : 0, "bad_actor": 1}
;targeted_class_field_name = ['author_type']
;decision_models = ['majority_voting']
;#decision_models = ['majority_voting', 'weighted_majority_voting']
;column_names_for_results_table = ["Targeted_class", "Similarity_function", "K", "Decision_model", "Anchors Percent Size", "Correctly_classified",
;                                    "Incorrectly_classified", "Total", "AUC", "Accuracy", "Precision", "Recall"
;                                 ]
;results_file_name = SNAM_ISIS_Propaganda_Twitter_knn_results.txt
;results_table_file_name = SNAM_ISIS_Propaganda_Twitter_knn_results_table.csv
;path = data/output/KNNWithLinkPrediction/
;index_field_for_predictions = author_screen_name


;[LinkPredictionFeatureExtractor]
;measure_names = ['jaccard_coefficient', 'common_neighbors', 'preferential_attachment',
#'adamic_adar_index', 'total_friends', 'transitive_friends_v1', 'transitive_friends_v2', 'opposite_direction_friends', 'bayesian_promising']
;#measure_names = ['friends_measure']
;aggregation_functions = ['min', 'max', 'mean', 'median', 'skew', 'kurtosis']
;graph_types = {"topic":'undirected', "common_posts": "undirected", "cocitation": "undirected"}
;property_node_field_names = ["author_type"]
;#targeted_class_field_name = author_sub_type
;#optional_classes = ["private", "company", "news_feed", "bot", "spammer"]

;# When Running this module - Please change domain into "Claim"
;[ClaimTopicFeatureGenerator]
;input_path = "data/input/ClaimTopicFeatureGenerator/"
;topic_statistics_file = "topic_statistics.csv"
;post_id_topic_id_dict_file = "posts_post_id_topic_id_json.json"
;classifier_name = "Random_Forest"
;#dataset_name = "Arabic_Honeypot"
;selected_features_file = "trained_classifier_AccountPropertiesFeatureGenerator_author_type_RandomForest_10_selected_features.pkl"
;features_extracted_by_tuple = ["authors_in_bucket", "posts_in_bucket", "post_author_ratio", "topic_type"]
;aggregated_features = [
;					  "max_authors_bucket", "max_num_of_authors", "max_authors_num_of_posts", "max_authors_post_author_ratio",
;                      "min_authors_bucket", "min_num_of_authors", "min_authors_num_of_posts", "min_authors_post_author_ratio",
;                      "max_posts_bucket", "max_num_of_posts", "max_posts_num_of_authors", "max_posts_post_author_ratio",
;                      "min_posts_bucket", "min_num_of_posts", "min_posts_num_of_authors", "min_posts_post_author_ratio",
;                      "average_num_of_posts", "average_num_of_authors",
;
;                      "half_num_of_posts_bucket", "third_num_of_posts_bucket", "quarter_num_of_posts_bucket",
;                      "fifth_num_of_posts_bucket", "sixth_num_of_posts_bucket", "seventh_num_of_posts_bucket",
;                      "eighth_num_of_posts_bucket", "ninth_num_of_posts_bucket", "tenth_num_of_posts_bucket",
;                      "one_part_eleven_num_of_posts_bucket", "one_part_twelve_num_of_posts_bucket",
;                      "one_part_thirteen_num_of_posts_bucket", "one_part_fifteen_num_of_posts_bucket",
;                      "one_part_twenty_num_of_posts_bucket", "one_part_fifty_num_of_posts_bucket",
;                      "one_part_one_hundred_num_of_posts_bucket",
;
;                      "opposite_third_num_of_posts_bucket", "opposite_quarter_num_of_posts_bucket",
;                      "opposite_fifth_num_of_posts_bucket", "opposite_sixth_num_of_posts_bucket",
;                      "opposite_seventh_num_of_posts_bucket", "opposite_eighth_num_of_posts_bucket",
;                      "opposite_ninth_num_of_posts_bucket", "opposite_tenth_num_of_posts_bucket",
;                      "opposite_one_part_eleven_num_of_posts_bucket", "opposite_one_part_twelve_num_of_posts_bucket",
;                      "opposite_one_part_thirteen_num_of_posts_bucket", "opposite_one_part_fifteen_num_of_posts_bucket",
;                      "opposite_one_part_twenty_num_of_posts_bucket", "opposite_one_part_fifty_num_of_posts_bucket",
;                      "opposite_one_part_one_hundred_num_of_posts_bucket",
;
;                      "half_num_of_authors_bucket", "third_num_of_authors_bucket", "quarter_num_of_authors_bucket",
;                      "fifth_num_of_authors_bucket", "sixth_num_of_authors_bucket", "seventh_num_of_authors_bucket",
;                      "eighth_num_of_authors_bucket", "ninth_num_of_authors_bucket", "tenth_num_of_authors_bucket",
;                      "one_part_eleven_num_of_authors_bucket", "one_part_twelve_num_of_authors_bucket",
;                      "one_part_thirteen_num_of_authors_bucket", "one_part_fifteen_num_of_authors_bucket",
;                      "one_part_twenty_num_of_authors_bucket", "one_part_fifty_num_of_authors_bucket",
;                      "one_part_one_hundred_num_of_authors_bucket",
;
;                      "opposite_third_num_of_authors_bucket", "opposite_quarter_num_of_posts_bucket",
;                      "opposite_fifth_num_of_authors_bucket", "opposite_sixth_num_of_posts_bucket",
;                      "opposite_seventh_num_of_authors_bucket", "opposite_eighth_num_of_posts_bucket",
;                      "opposite_ninth_num_of_authors_bucket", "opposite_tenth_num_of_posts_bucket",
;                      "opposite_one_part_eleven_num_of_authors_bucket", "opposite_one_part_twelve_num_of_authors_bucket",
;                      "opposite_one_part_thirteen_num_of_authors_bucket", "opposite_one_part_fifteen_num_of_authors_bucket",
;                      "opposite_one_part_twenty_num_of_authors_bucket", "opposite_one_part_fifty_num_of_authors_bucket",
;                      "opposite_one_part_one_hundred_num_of_authors_bucket",
;
;                      "median_num_of_posts", "median_num_of_authors"]


;[Kernel_Performance_Evaluator]
;kernels = ['bag_of_words', 'common_posts', 'cocitation', 'topic', 'topic_distr', 'profile_prop']
;index_field_for_predictions = author_screen_name
;path = data/output/Kernel_Performance_Evaluator/

;[ClaimFeatureGenerator]
;features_list = ['verdict_date']
;#features_list = ['claim_id', 'claim_type', 'verdict_date']
;good_claim_type = ['TRUE', 'mostly-true']
;bad_claim_type = ['FALSE', 'mostly-false', 'Mostly False', 'pants-fire']

;[LinkPredictionEvaluator]
;graph_types = {"cocitation":"undirected"}
;measure_names = ['common_neighbors', 'preferential_attachment','adamic_adar_index',
;                 'total_friends', 'transitive_friends_v1', 'transitive_friends_v2', 'opposite_direction_friends']
;#measure_names = ['jaccard_coefficient']
;negative_link_method = ['easy', 'hard']
;#negative_link_method = ['hard']
;#easy means randomly forming pairs of nodes that are not connected in the graph
;#hard means that these nodes also have to be at distance 2
;percent_of_links_to_sample = [0.1]
;number_iterations = 1

# **************** END FEATURE EXTRACTOR MODULES ******************************
[DataFrameCreator]
all_authors = True
normalize = False

;[DataExporter]
;#arff_file = 'data/output/clickbait_challenge_validation_training_set2.arff'
;arff_file = 'data/output/clickbait_small_training_set.arff'
;#author_type_classes = ["bad_actor", "good_actor"]
;author_type_classes = ['TRUE', 'FALSE']
;target_type_attr_name = "ClaimTopicFeatureGenerator_topic_type"

;[Predictor] check if works
;trained_classifier_file_name = 'trained_classifier_author_type_AdaBoost_10_features.pkl'
;best_features_file_name = 'trained_classifier_author_type_AdaBoost_10_selected_features.pkl'
;full_path_trained_classifier_directory = 'data/output/expermintal_environment/trained_classifiers/'
;path = 'data/output/expermintal_environment/'
;targeted_class_field_names = ['author_type']
;replace_missing_values = 'zero'
;indentifier_field_name = 'author_screen_name'
;feature_names_to_remove = ["author_guid", "author_sub_type", "author_screen_name", "set_affiliation"]
;selected_features = []
;targeted_class_dict = {"no-clickbait" : 0, "clickbait": 1}
;classifier_type_name = 'AdaBoost'
;num_of_features = 10


;[ExperimentalEnvironment]
;;actions = ['perform_k_fold_cross_validation_and_predict', 'predict_on_prepared_clssifier', 'train_one_class_classifier_and_predict',
;;            'train_one_class_classifier_by_k_best_and_predict', 'transfer_learning']
;actions = ['predict_on_prepared_clssifier']
;#actions = ['perform_k_fold_cross_validation_and_predict']
;
;# training_size = 1% so test set = 99%
;divide_lableled_by_percent_training_size = [0.01, 0.02, 0.05, 0.1, 0.2, 0.4]
;k_for_fold = 10
;classifier_type_names = ["RandomForest", "DecisionTree", "AdaBoost", "XGBoost"]
;selected_features = ["AccountPropertiesFeatureGenerator_account_age",
;                    "AccountPropertiesFeatureGenerator_default_profile",
;                    "AccountPropertiesFeatureGenerator_friends_followers_ratio",
;                    "AccountPropertiesFeatureGenerator_number_followers",
;                    "AccountPropertiesFeatureGenerator_number_of_crawled_posts",
;                    "AccountPropertiesFeatureGenerator_verified",
;                    "BehaviorFeatureGenerator_average_minutes_between_posts",
;                    "BehaviorFeatureGenerator_average_retweets",
;                    "BehaviorFeatureGenerator_retweet_count",
;                    "SyntaxFeatureGenerator_average_user_mentions"
;                    ]
;#targeted_class_name = author_type
;targeted_class_name = AccountPropertiesFeatureGenerator_author_type
;;;removed_features = ["author_sub_type", "author_type", "author_screen_name"]
;removed_features = []
;num_iterations = [5]
;source_domains = "ClickBait_Challange"
;target_domains = "ClickBait_Challange"
;optional_classes = ["good_actor", "bad_actor"]
;index_field = AccountPropertiesFeatureGenerator_author_screen_name
;#index_field = name
;results_file_name = Fake_News_Snopes_Dataset_Classifiers_results2.txt
;results_table_file_name = Fake_News_Snopes_Dataset_Classifiers_results2.csv
;path = data/output/expermintal_environment/
;backup_path = data\output\results\backup\
;is_rank_influential_features = False
;num_of_features_to_train = [5,10,20,'all']
;full_path_model_directory = data/output/expermintal_environment/
#full_path_model_directory = data/output/expermintal_environment/Virtual_TV_Verified_Crowdturfers/
#full_path_model_directory = data/output/expermintal_environment/Cyber_Security/
;full_path_model_directory = data/output/expermintal_environment/Arabic_Honeypot/
#prepared_classifier_name = Virtual_TV_Manually_Labeled_trained_classifier_RandomForest_10_features.pkl
#prepared_classifier_name = Verified_Cowdturfers_trained_classifier_RandomForest_10_features.pkl
#prepared_classifier_name = Cyber_Security_trained_classifier_RandomForest_10_features.pkl
;prepared_classifier_name = Virtual_TV_Manually_Labeled_trained_classifier_RandomForest_10_features.pkl
;
;order_of_results_dictionary = ['targeted_class_field_name', 'similarity_functions', 'k', 'decision_models', 'link_prediction_models']
;column_names_for_results_table = ["Targeted_class", "Selected_classifier", "Num_of_features", "Correctly_classified",
;                                 "Incorrectly_classified", "Total", "AUC", "Accuracy", "Precision", "Recall"
;                                 ]
;replace_missing_values = 'zero'
;num_of_iterations = 5
;#trained_classifier
;trained_classifier_type_name = RandomForest
;trained_classifier_num_of_features = 10


;############################################################################
;#################Transfer Learning##########################################
;#############################################################################
;transfer_learning = False
;
;#source_domain = 'manually_labeled'
;#source_domain = 'acquired_abusers'
;source_domain = 'honeypot'
;
;#'db': load authors and features from DB table 'authors_features' and train a new model.
;#'csv': load authors with their features from a csv file and trains new model.
;source_input_type = 'csv'
;#source_input_path = 'D:/SOMWEB/documents/Jorge Thesis/arff/[1]manually_good_and_bad_actors/bad_actors_manually_good_and_bad_only.csv'
;#source_input_path = 'D:/SOMWEB/documents/Jorge Thesis/arff/[2]verfied_abusers_and_unlabeled/acquired_dataset.csv'
;source_input_path = 'D:/SOMWEB/documents/Jorge Thesis/arff/[3]honeypot_bots/honeypot.csv'
;
;
;split_percentage = 0.8
;
;transfer_instances = True
;#transfer_algo = 'MODIFIED_BURAK'
;transfer_algo = 'MODIFIED_GRAVITY_WEIGHTING'
;num_neighbors = [1, 2, 3, 4, 5]
;
;#target_domain = 'manually_labeled'
;target_domain = 'acquired_abusers'
;#target_domain = 'honeypot'
;target_input_type = 'csv'
;#target_input_path = 'D:/SOMWEB/documents/Jorge Thesis/arff/[1]manually_good_and_bad_actors/bad_actors_manually_good_and_bad_only.csv'
;target_input_path = 'D:/SOMWEB/documents/Jorge Thesis/arff/[2]verfied_abusers_and_unlabeled/acquired_dataset.csv'
;#target_input_path = 'D:/SOMWEB/documents/Jorge Thesis/arff/[3]honeypot_bots/honeypot.csv
;
;target_train_test_split = 0.8
;#target_train_percent_limit is to keep only this percentage of examples in the training set, simulating a smaller target dataset
;target_train_percent_limit = 0.1
;target_test_percent_limit = 1
;#transfer_instances =False -> executes the same code but without transfering isntances (used to verify it is not transferring instances)
;transfer_instances = True
;transfer_algo = 'GRAVITY_WEIGHTING'
;#transfer_algo = 'BURAK'
;
;#for the BURAK algorihtm, set the number of neares neighbors to transfer, for GRAVITY_WEIGHTING set this value to -1
;#num_neighbors = [1,2,3,4,5,10]
;num_neighbors = [-1]

;[Data_Handler]
;;data handler must be on for classifier trainer
;to_replace_to_numerals = False
;id_field = 'author_guid'
;fill_empty='mean'
;;first remove features than select from whats left
;;
;;;remove_features_by_prefix = ['Sentiment', 'Word_Embeddings']
;remove_features_by_prefix = []
;select_features_by_prefix = []

;[Classifier_Trainer]
;saved_classifier_path = "data/output/expermintal_environment"
;target_field= 'author_type'
;;label_text_to_value = {'no-clickbait':0,'clickbait':1}
;;label_text_to_value = {'true':0,'mostly-true':1, 'half-true':2,'barely-true':3, 'false':4, 'pants-fire':5}
;label_text_to_value = {'good_actor':0,'bad_actor':1}
;select_features= []
;;remove_features=['author_screen_name','author_sub_type', 'link_prediction_kurtosis_adamic_adar_index_topic_bad_actor','link_prediction_kurtosis_common_neighbors_topic_bad_actor','link_prediction_kurtosis_jaccard_coefficient_topic_bad_actor','link_prediction_kurtosis_preferential_attachment_topic_bad_actor','link_prediction_max_adamic_adar_index_common_posts_bad_actor','link_prediction_max_adamic_adar_index_topic_bad_actor','link_prediction_max_common_neighbors_common_posts_bad_actor','link_prediction_max_common_neighbors_topic_bad_actor','link_prediction_max_jaccard_coefficient_common_posts_bad_actor','link_prediction_max_jaccard_coefficient_topic_bad_actor','link_prediction_max_preferential_attachment_topic_bad_actor','link_prediction_mean_adamic_adar_index_common_posts_bad_actor','link_prediction_mean_adamic_adar_index_topic_bad_actor','link_prediction_mean_common_neighbors_common_posts_bad_actor','link_prediction_mean_common_neighbors_topic_bad_actor','link_prediction_mean_jaccard_coefficient_common_posts_bad_actor','link_prediction_mean_jaccard_coefficient_topic_bad_actor','link_prediction_mean_preferential_attachment_topic_bad_actor','link_prediction_median_adamic_adar_index_common_posts_bad_actor','link_prediction_median_adamic_adar_index_topic_bad_actor','link_prediction_median_common_neighbors_common_posts_bad_actor','link_prediction_median_common_neighbors_topic_bad_actor','link_prediction_median_jaccard_coefficient_common_posts_bad_actor','link_prediction_median_jaccard_coefficient_topic_bad_actor','link_prediction_median_preferential_attachment_topic_bad_actor','link_prediction_min_adamic_adar_index_common_posts_bad_actor','link_prediction_min_adamic_adar_index_topic_bad_actor','link_prediction_min_common_neighbors_common_posts_bad_actor','link_prediction_min_common_neighbors_topic_bad_actor','link_prediction_min_jaccard_coefficient_common_posts_bad_actor','link_prediction_min_jaccard_coefficient_topic_bad_actor','link_prediction_min_preferential_attachment_topic_bad_actor','link_prediction_skew_adamic_adar_index_topic_bad_actor','link_prediction_skew_common_neighbors_topic_bad_actor','link_prediction_skew_jaccard_coefficient_topic_bad_actor','link_prediction_skew_preferential_attachment_topic_bad_actor','topic_net_closeness_centrality','topic_net_closeness_centrality_aggregation_function_kurt_neighb_size_1','topic_net_closeness_centrality_aggregation_function_mean_neighb_size_1','topic_net_closeness_centrality_aggregation_function_skew_neighb_size_1','topic_net_closeness_centrality_aggregation_function_std_neighb_size_1','topic_net_clustering','topic_net_clustering_aggregation_function_kurt_neighb_size_1','topic_net_clustering_aggregation_function_mean_neighb_size_1','topic_net_clustering_aggregation_function_skew_neighb_size_1','topic_net_clustering_aggregation_function_std_neighb_size_1','topic_net_degree_centrality','topic_net_degree_centrality_aggregation_function_kurt_neighb_size_1','topic_net_degree_centrality_aggregation_function_mean_neighb_size_1','topic_net_degree_centrality_aggregation_function_skew_neighb_size_1','topic_net_degree_centrality_aggregation_function_std_neighb_size_1']
;remove_features=['author_screen_name', 'author_sub_type']
;;selects k best features
;
;num_of_features_to_select = [5,10,20, 25, 'all']
;;compares by leftmost, if equals go to right - max 2 matrics
;;compare_matrics_by_order = ["auc","accuracy"]
;compare_matrics_by_order = ["auc","accuracy"]
;;k=[2,5,7]
;;k=[7,10,12]
;k=[7]
;classifiers_with_parameters_dict =[
;;                                  {"name":'VotingClassifier', "params":'estimators=[("cl1",GaussianNB() ), ("cl2", XGBClassifier()),("cl3", MLPClassifier())]'
;;                                  },
;;      {"name":'GradientBoostingClassifier', "params":'n_estimators=100, learning_rate=1.0, max_depth=1, random_state=0'
;;      },
;;      {"name":'SGDClassifier',"params":'alpha=0.0001, average=False, class_weight=None, epsilon=0.1,eta0=0.0, fit_intercept=True, l1_ratio=0.15, learning_rate="optimal", loss="hinge", max_iter=None, n_iter=None, n_jobs=1, penalty="l2", power_t=0.5, random_state=None,shuffle=True, tol=None, verbose=0, warm_start=False'
;;      },
;;      {"name":'BernoulliNB',"params":'alpha=1.0, binarize=0.0, fit_prior=True, class_prior=None'
;;      },
;;    {"name":'SVC',"params":'gamma=2, C=1'
;;    },
;;    {"name":'MLPClassifier', "params":'hidden_layer_sizes=(20,20,20,), activation="relu",solver="adam", alpha=0.0001,batch_size="auto", learning_rate="constant",learning_rate_init=0.005, power_t=0.5, max_iter=10000,shuffle=True, random_state=None, tol=1e-4,verbose=False, warm_start=False, momentum=0.9,nesterovs_momentum=True, early_stopping=False,validation_fraction=0.1, beta_1=0.9, beta_2=0.999,epsilon=1e-8'
;;    },
;;    {"name":'KNeighborsClassifier', "params":'n_neighbors=5,weights="uniform", algorithm="auto", leaf_size=30,p=2, metric="minkowski", metric_params=None, n_jobs=1'
;;    },
;;    {"name":'GaussianNB', "params":'priors=None'
;;    },
;;    {"name":'GaussianProcessClassifier', "params":'kernel=None, optimizer="fmin_l_bfgs_b",n_restarts_optimizer=0, max_iter_predict=100,warm_start=False, copy_X_train=True, random_state=None,multi_class="one_vs_rest", n_jobs=1'
;;    },
;    {"name":'AdaBoostClassifier',"params":'base_estimator=None,n_estimators=50,learning_rate=1.,algorithm="SAMME.R",random_state=None'
;    },
;;    {"name":'ExtraTreesClassifier', "params":'n_estimators=10,criterion="gini",max_depth=None,min_samples_split=2,min_samples_leaf=1,min_weight_fraction_leaf=0.,max_features="auto",max_leaf_nodes=None,min_impurity_decrease=0.,min_impurity_split=None,bootstrap=False,oob_score=False,n_jobs=1,random_state=None,verbose=0,warm_start=False,class_weight=None'
;;    },
;    {"name":'RandomForestClassifier', "params":''
;    },
;    {"name":'DecisionTreeClassifier', "params":''},
;    {"name":'XGBClassifier',
;    "params":'max_depth=10, learning_rate=0.1,n_estimators=100, silent=True,objective="binary:logistic",nthread=-1, gamma=0, min_child_weight=1,max_delta_step=0, subsample=1, colsample_bytree=1, colsample_bylevel=1,reg_alpha=0, reg_lambda=1, scale_pos_weight=1,base_score=0.5, seed=0, missing=None'
;    }
;    ]

;[Classifier_Runner]
;classifier_file_path_and_name = "data/output/expermintal_environment/DecisionTreeClassifier.pkl"
;selected_feature_file_path_and_name = "data/output/expermintal_environment/selected_features_names.pkl"
;saved_prediction_file_path_and_name = "data/output/expermintal_environment/predictions.csv"
;

;[ClaimToTopicConverter]
;output_path = 'data/output/topic_distribution_visualization/'
;remove_stop_words = False

;[Experimentor]
;actions = ['extract_dataset']
;#actions = ['perform_k_fold_cross_validation_and_predict_updated']
;#actions = ['performance_function_of_training_size_ordered_by_number_of_posts_cross_validation']
;#actions = ['performance_function_training_size_random_cross_validation_experiments']
;#actions = ['check_model_is_overfitting_cross_validation']
;#actions = ['performance_function_training_size_random_choosing_no_cross_validation']
;#actions = ['performance_function_training_size_order_by_num_of_posts_no_cross_validation']
;targeted_class_name = "ClaimFeatureGenerator_claim_type"
;#classifier_type_names = ["RandomForest", "DecisionTree", "AdaBoost", "XGBoost"]
;classifier_type_names = ["RandomForest"]
;#classifier_type_names = ["XGBoost"]
;num_of_features_to_train = [163]
;#num_of_features_to_train = [5, 10, 15]
;#num_of_features_to_train = [5, 10, 15, 20, 30, 40, 50, 60, 70, 80 , 90, 100, 150, 200, 250, 300, 350, 400, 450, 500, 700, 1000, 1200, 1300, 1400, 1500, 1600, 1700]
;#num_of_features_to_train = []
;#num_of_features_to_train = [5]
;k_for_fold = 10
;replace_missing_values = 'zero'
;is_create_equal_number_of_records_per_class = False
;optional_classes = ['True', 'False']
;# for ordered number of posts (the functions are: performance_function_of_training_size_ordered_by_number_of_posts_cross_validation, performance_function_training_size_order_by_num_of_posts_no_cross_validation)
;;targeted_classes_dict = { 'TRUE': 0,
;;                         'FALSE': 1,
;;                         'mostly-true': 0,
;;                         'mostly-false': 1,
;;                         'Fact': 0,
;;                         'Mostly False': 1,
;;                         'pants-fire': 1,
;;                         'Miscaptioned': 1,
;;                         'barely-true': 1,
;;                         'scam': 1,
;;                        'True': 0,
;;                        'False': 1
;;   }
;targeted_class_field_name = "ClaimFeatureGenerator_claim_type"
;# For random (the functions are: performance_function_training_size_random_cross_validation_experiments,
;                                # performance_function_training_size_random_choosing_no_cross_validation)
;targeted_classes_dict = { 'True': 0,
;                         'False': 1,
;                         }
;index_field = "ClaimFeatureGenerator_claim_id"
;removed_features = [
;                    "ClaimFeatureGenerator_claim_id"
;                   ]
;selected_features = [
;                    "ClaimFeatureGenerator_claim_type",
;                "FakeNewsFeatureGenerator_fake_fraction",
;                "FootprintFeatureGenerator_std_dev_num_of_listed_count",
;                "FootprintFeatureGenerator_std_dev_num_of_followers",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d78",
;                "FootprintFeatureGenerator_avg_num_of_listed_count",
;                "FootprintFeatureGenerator_avg_num_of_followers",
;                "FakeNewsFeatureGenerator_fake_count",
;                "FootprintFeatureGenerator_std_dev_num_of_friends",
;                "FootprintFeatureGenerator_avg_num_of_friends",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d97",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d262",
;                "FootprintFeatureGenerator_max_num_of_followers",
;                "FootprintFeatureGenerator_max_num_of_listed_count",
;                "FakeNewsFeatureGenerator_words_fraction_sum",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d210",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d229",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d158",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d38",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d112",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d82",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d188",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d4",
;                "FootprintFeatureGenerator_std_dev_num_of_favorites",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d13",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d59",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d199",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d259",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d252",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d157",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d105",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d13",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d4",
;                "FootprintFeatureGenerator_std_dev_friends_followers_ratio",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d94",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d128",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d220",
;                "FootprintFeatureGenerator_max_num_of_friends",
;                "FootprintFeatureGenerator_min_num_of_friends",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d185",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d10",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d181",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d89",
;                "GensimDoc2VecFeatureGenerator_100_dimensions_5_window_size_claims_posts-content_d84",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d156",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d110",
;                "BehaviorFeatureGenerator_average_posts_per_day_active_days",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d97",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d220",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d276",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d159",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d149",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d239",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d33",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d213",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d168",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d107",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d80",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d2",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d264",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d32",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d142",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d32",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d22",
;                "FootprintFeatureGenerator_avg_friends_followers_ratio",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d134",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d94",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d115",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d166",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d70",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d90",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d56",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d90",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d159",
;                "FootprintFeatureGenerator_avg_num_of_favorites",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d77",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d299",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d16",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d60",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d177",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d179",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d20",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d162",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d135",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d12",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d266",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d74",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d265",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d120",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d18",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d185",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d256",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d292",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d110",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d261",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d233",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d148",
;                "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d163",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d29",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d30",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d151",
;                "FakeNewsFeatureGenerator_words_count_sum",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d28",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d244",
;                "FootprintFeatureGenerator_max_num_of_favorites",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d134",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d53",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d180",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d80",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d109",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d112",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d199",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d136",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d138",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d145",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d67",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d31",
;                "FakeNewsFeatureGenerator_isn't_fraction",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d160",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d151",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d57",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d203",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d5",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d216",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d174",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d52",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d283",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d175",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d54",
;                "FootprintFeatureGenerator_min_num_of_verified",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d196",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d138",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d177",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d29",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d147",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d295",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d156",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d278",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d25",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d100",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d122",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d130",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d161",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d120",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d33",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d38",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d74",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d130",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d19",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d244",
;                "FakeNewsFeatureGenerator_a-lie_count",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d9",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d250",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d199",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d15",
;                "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d216",
;                "FootprintFeatureGenerator_avg_num_of_protected",
;                "FootprintFeatureGenerator_min_num_of_followers",
;                "FootprintFeatureGenerator_min_num_of_favorites",
;                "FootprintFeatureGenerator_min_num_of_listed_count",
;                "FootprintFeatureGenerator_min_num_of_protected",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d12",
;                "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d152",
;                "FootprintFeatureGenerator_max_num_of_protected",
;                   ]
;full_path_model_directory = "data/output/Experimentor/"
;# Should use it only when you find the best constaliation: for example Random forest with 5 features.
;export_file_with_predictions_during_training = False
;prepared_classifier_file_name = "trained_classifier_ClaimFeatureGenerator_claim_type_RandomForest_15_features.pkl"
;prepared_classifier_selected_features_file_name = "trained_classifier_ClaimFeatureGenerator_claim_type_RandomForest_15_selected_features.pkl"
;targeted_classifier_name = "RandomForest"
;targeted_classifier_num_of_features = 15
;# divide training set by records
;divide_records_by_trageted_classes = True
;iterations = 1
;divide_records_by_trageted_classes_experiments = [{'True': 182, 'False': 204},
;;                                                 {'True': 10, 'False': 10},
;;                                                 {'True': 20, 'False': 20},
;;                                                 {'True': 30, 'False': 30},
;;                                                 {'True': 40, 'False': 40},
;;                                                 {'True': 50, 'False': 50},
;;                                                 {'True': 60, 'False': 60},
;;                                                 {'True': 70, 'False': 70},
;;                                                 {'True': 80, 'False': 80},
;;                                                 {'True': 90, 'False': 90},
;;                                                 {'True': 100, 'False': 100},
;;                                                 {'True': 110, 'False': 110},
;;                                                 {'True': 120, 'False': 120},
;;                                                 {'True': 130, 'False': 130},
;;                                                 {'True': 140, 'False': 140},
;;                                                 {'True': 150, 'False': 150},
;;                                                 {'True': 160, 'False': 160},
;;                                                 {'True': 170, 'False': 170},
;;                                                 # add it only in case it is 10-fold-cross validation
;;                                                 {'True': 180, 'False': 180}
;    ]


;[ClassifierHyperparameterFinder]
;#actions = ['find_random_forest_best_parameters', run_selected_classiifier_on_training_and_test_sets]
;actions = ['run_selected_classiifier_on_training_and_test_sets']
;#actions = ['find_random_forest_best_parameters_train_and_test_sets_no_Validation']
;#actions = ['find_xgboost_best_parameters_train_and_test_sets_no_Validation']
;#actions = ['find_adaboost_best_parameters_train_and_test_sets_no_Validation']
;#actions = ['find_decision_tree_best_parameters_train_and_test_sets_no_Validation']
;#actions = ['find_svm_best_parameters_train_and_test_sets_no_Validation']
;#actions = ['find_random_forest_best_parameters_random_train_validation_and_test_sets']
;#actions = ['find_random_forest_best_parameters']
;input_path = "data/input/"
;dataset_csv_file_name = "Fake_News_WoTC_Dataset.csv"
;sort_by_date = True
;date_field_name = "ClaimFeatureGenerator_verdict_date"
;remove_features = [
;                "author_guid",
;                "ClaimFeatureGenerator_claim_id"
;    ]
;targeted_class_field_name = "ClaimFeatureGenerator_claim_type"
;training_set_num_of_records = 300
;test_set_num_of_records = 86
;validation_set_num_of_records = 100
;iterations = 1
;num_of_features = [5, 10, 15]
;
;random_forest_estimators = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
;random_forest_max_depth = [1, 2, 3, 4]
;random_forest_min_samples_split = [2, 3, 4]
;random_forest_min_samples_leaf = [1, 2, 3, 4]
;random_forest_max_leaf_nodes = [2, 3, 4, None]
;output_path = "data/output/ClassifierHyperparameterFinder/"
;
;
;#find_xgboost_best_parameters_train_and_test_sets_no_Validation
;xgboost_estimators = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
;xgboost_max_depth = [1, 2, 3, 4, 5, 6]
;xgboost_learning_rate = [0.01, 0.02, 0.05, 0.1, 0.2, 0.5, 1]
;
;#find_adaboost_best_parameters_train_and_test_sets_no_Validation
;adaboost_estimators = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
;adaboost_learning_rate = [0.01, 0.02, 0.05, 0.1, 0.2, 0.5, 1]
;
;#find_decision_tree_best_parameters_train_and_test_sets_no_Validation
;decision_tree_max_depth = [1, 2, 3, 4]
;decision_tree_min_samples_split = [2, 3, 4]
;decision_tree_min_samples_leaf = [1, 2, 3, 4]
;decision_tree_max_leaf_nodes = [2, 3, 4, None]
;
;
;svm_c = [1.0, 1.3, 1.5, 2.0, 3.0]
;svm_degree= [1, 2, 3, 4, 5]
;
;selected_num_of_features = 15
;selected_estimators = 10
;selected_max_depth = 2
;selected_min_samples_split = 2
;selected_min_samples_leaf = 4
;selected_max_leaf_nodes = 3
;selected_top_features = "GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d220||GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d139||GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d264||FootprintFeatureGenerator_max_num_of_listed_count||GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d168||GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d4||GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d169||GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d27||GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d57||GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d91||GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d21||NetworkxFeatureGenerator_std_pagerank||GloveWordEmbeddingsFeatureGenerator_max_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d57||GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d4||GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d64"
;;                        "NetworkxFeatureGenerator_min_pagerank",
;;                        "NetworkxFeatureGenerator_number_of_nodes",
;;                        "NetworkxFeatureGenerator_std_pagerank",
;;                        "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d33",
;;                        "NetworkxFeatureGenerator_median_pagerank",
;;                        "NetworkxFeatureGenerator_median_effective_eccentricity",
;;                        "NetworkxFeatureGenerator_max_degree",
;;                        "FakeNewsFeatureGenerator_isn't_fraction",
;;                        "TemporalFeatureGenerator_posts_525600_t_skewness",
;;                        "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d171",
;;                        "GloveWordEmbeddingsFeatureGenerator_min_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d171",
;;                        "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d35",
;;                        "NetworkxFeatureGenerator_std_adjacency_spectrum",
;;                        "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_twitter_27B_200_dim_d168",
;;                        "GloveWordEmbeddingsFeatureGenerator_np.mean_claims__domain_Microblog_content_author_word_embeddings_glove_wikipedia_300_dim_d93",
;                        #]
;num_to_class_dict = {0: 'True', 1: 'False'}

;[EntityToTopicConverter]
;# source : is for the topic item. target_field is were the topic content found
;# destination: is for post related to source
;json_output_path = 'data/output/topic_distribution_visualization/'
;targeted_fields = [{'source': {'table_name': 'claims', 'id': 'claim_id', 'target_field': 'description',
;                          "where_clauses": []},
;                   'connection': {'table_name': 'claim_tweet_connection', 'source_id': 'claim_id',
;                                  'target_id': 'post_id'},
;                   'destination': {'table_name': 'posts', 'id': 'post_id', 'target_field': 'content',
;                                   "where_clauses": []}
;					}
;				  ]
;remove_stop_words = True

;[TopicAuthenticityExperimentor]
;classification_method = 'posts'
;#classification_method = 'authors'
;path = "data/output/AuthorAuthenticityExperimentor/"
;good_buckets = [0.1, 0.2, 0.3, 0.4, 0.5]
;bad_buckets = [0.6, 0.7, 0.8, 0.9, 1]
;input_topic_statistics_file_name = "topic_statistics.csv"
;claim_id_topic_num_dict_json_file_name = "claims_claim_id_topic_id_json.json"
;targeted_classes_dict = { 'TRUE': 0,
;                         'FALSE': 1,
;                         'mostly-true': 0,
;                         'mostly-false': 1,
;                         'Fact': 0,
;                         'Mostly False': 1,
;                         'pants-fire': 1,
;                         'pants-on-fire': 1,
;                         'Miscaptioned': 1,
;                         'barely-true': 1,
;                         'scam': 1
;                        }



;[TopicDistrobutionVisualizationGenerator]
;# If it is false you should insert a CSV file under prediction_csv_path
;read_predictions_from_db = True
;include_unlabeled_predictions = True
;include_labeled_authors_in_visualization = False
;;# this field is selected from authors table (should be the same as in prediction file)
;target_author_field = "author_screen_name"
;include_topic_labels = True
;# this the output after running EntityToTopicConverter
;claim_to_topic_connection_json = 'data/output/topic_distribution_visualization/claims_claim_id_topic_id_json.json'
;topic_classification_table_args = {'table': "claims", 'id': 'claim_id', 'type_field': 'verdict'}
;
;optional_classes = {'good_actor': 0, 'bad_actor': 1}
;font_path = "topic_distribution_visualization/Mukadimah.ttf"
;#prediction_csv_path = "data/output/topic_distribution_visualization/predictions.csv"
;prediction_csv_path = "data/output/expermintal_environment/predictions_on_unlabeled_authors_AccountPropertiesFeatureGenerator_author_type_RandomForest_10_features.csv"
;output_dir = "data/output/topic_distribution_visualization/"
;buckets = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]
;extend_posts_by_retweets = False
;

;[PostManager]
;post_strategy ='last'
;#related_hashtags = ['#liverpool', '#football', '#liverpoolfc', '#premierleague', '#lfc', '#ynwa', '#soccer', '#championsleague',  '#anfield', '#merseyside', '#fifa', '#london', '#england', '#liverpoolfans', '#like', '#epl', '#uk']
;#related_hashtags = ['#arsenal', '#football', '#premierleague', '#soccer', '#coyg', '#arsenalfc', '#gunner', '#afc', '#aubameyang', '#lacazette', '#gooners', '#fifa', '#ozil', '#championsleague', '#everton' ,'#gooner']
;#related_hashtags = ['#chelsea', '#premierleague', '#football', 'chelseafc', '#cfc', '#london', '#soccer', '#chelseafans', '#championsleague'  ,'#cfcfamily', '#lampard', '#blueisthecolour', '#fifa']
;related_hashtags = ['#manchesterunited', '#football', '#premierleague', '#mufc', '#manutd', '#soccer', '#ggmu', '#manchester', '#manunited', '#manchestercity', '#fifa','#united', '#reddevils', '#oldtrafford',  '#england','#pogba' ,'#championsleague']
;actions = ['time_schedule']
;#actions = ['calculate_posts_stat']
;#post_strategy ='popular'
;source_group = ['UnitedRedscom','RedDevilBible','ManUtdMEN']
;target_group = 'ManUtd'
;user_id = 833580558747856897
;number_of_posts = 20
;retweet_precent = 0.4
;posts_num = 0

;[EchoManager]
;actions = ["comment_echo"]
;target_id = 1084470854979854336
;source_username = "CohenmanchOfir"
;source_id = 833580558747856897


;[CommentManager]
;actions = ['applying_replies_crawling']
;#actions = ['insert_followers']

#actions = ['get_users_details']

;[InfluenceManager]
;
;actions = ['influencer_calculation']
;#features = ['wall_avg_of_replies','pagerank','closeness','eigenvector','wall_avg_favourites','wall_avg_post_count_for_morning_noon_night','wall_sum_of_shares','wall_sum_of_mentions','team_sum_of_mentions','followers_count','friends_count','wall_full_favourites_count','wall_statuses_count','wall_avg_daily_statuses','wall_avg_daily_favourites','wall_avg_favourites','Followers_ratio','wall_avg_of_favorite','team_sum_of_shares','team_avg_favourites_ratio','team_sum_of_favorite','team_sum_of_comments','team_sum_of_favorite']
;
;#features = ['wall_avg_of_replies','eigenvector','pagerank','closeness','wall_avg_favourites','wall_avg_post_count_for_morning_noon_night','wall_sum_of_shares','wall_sum_of_mentions','team_sum_of_mentions','followers_count','friends_count','wall_full_favourites_count','wall_statuses_count','wall_avg_daily_statuses','wall_avg_daily_favourites','wall_avg_favourites','Followers_ratio','wall_avg_of_favorite','team_sum_of_shares','team_avg_favourites_ratio','team_sum_of_favorite','team_sum_of_comments','team_sum_of_favorite']
;group_guid = "eb4815c9-adf0-3fe9-b2a6-3c8416c4c7bc"
;features = ['pagerank','closeness','wall_avg_favourites','team_sum_of_mentions','wall_avg_post_count_for_morning_noon_night','followers_count','wall_sum_of_shares','wall_sum_of_mentions','friends_count','wall_full_favourites_count','wall_statuses_count','wall_avg_daily_statuses','wall_avg_daily_favourites','wall_avg_favourites','Followers_ratio','team_sum_of_shares','wall_avg_of_favorite','team_avg_favourites_ratio','team_sum_of_favorite','team_sum_of_comments','team_sum_of_favorite']
;
;;
;;



[TwitterApiRequester]
consumer_key = "ylABfKwfNvpadI2wtlGnVkJ2X"
consumer_secret = "XzrilSALYRebVOq4uO8ynN4K9PyGAK8MgwRUEK7LNeYEBSb0lm"
access_token_key = "833580558747856897-EsfVQvCZKebd2s3Foyc9OVSQLlQJwEE"
access_token_secret = "HiOPUEwViN5yFWUJXR640HBQ99AlzaFFsc6UURPRs1AMd"
user_id = 833580558747856897
screen_name = "soccer_researc"

[Twitter_Rest_Api]
#can be 1, 2, or 3
working_app_number = 1
maximal_get_friend_ids_requests_in_window = 15
maximal_get_follower_ids_requests_in_window = 15
maximal_get_user_requests_in_window = 180
maximal_user_ids_allowed_in_single_get_user_request = 100
num_of_requests_without_checking = 9999999999
num_of_twitter_status_id_requests_without_checking = 9999999999
num_of_twitter_timeline_requests_without_checking = 9999999999
maximal_number_of_retrieved_users = 1000
max_tweet_ids_allowed_in_single_get_tweets_by_tweet_ids_request = 100
max_num_of_tweet_ids_requests_without_checking = 900

;[TimelineOverlapVisualizationGenerator] check if needed
;common_posts_threshold = 1
;# unlabeled bad author - an author that wasn't manually labeled, i.e. was automatically classified by the model as bad actor
;#unlabeled_bad_authors = ["NewAndroidApps", "PeopleSource_UK", "Niko360","couponsaday", "JuJu_Carbo","LearningroomLMS"]
;# labeled bad author - an author that was manually labeled as bad actor
;#labeled_bad_authors = ["nb95591", "T2Alice", "hjcbizsolutions"]
;output_dir = "overlapping_visualization"
;output_path = "data/output"
;
;;end_date =  ''



